version: '3.8'

services:
  equity-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_NAME=equity
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    depends_on:
      - redis
      - postgres
    volumes:
      - ./equity:/app
    restart: unless-stopped

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: equity
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "4200:4200"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.celery.app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
      - postgres
    volumes:
      - ./equity:/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: